<?xml version="1.0" encoding="utf-8"?>

<!-- Targets file for compiling VitaCGCompile files -->
<!-- Copyright Rebecca Ann Heineman -->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<!-- Include the xml file that describes the menus in Visual Studio -->
	<ItemGroup>
		<PropertyPageSchema Include="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).xml" />
		<AvailableItemName Include="VitaCGCompile">
			<Targets>_VitaCGCompile</Targets>
		</AvailableItemName>
	</ItemGroup>

	<!-- Send the output to the linkers -->
	<PropertyGroup>
		<ComputeLinkInputsTargets>$(ComputeLinkInputsTargets);ComputeVitaCGCompileOutput;</ComputeLinkInputsTargets>
		<ComputeLibInputsTargets>$(ComputeLibInputsTargets);ComputeVitaCGCompileOutput;</ComputeLibInputsTargets>
	</PropertyGroup>

	<!-- Use the built-in XamlTaskFactory to perform the build processing -->
	<!-- Use the xml file to get the command line description -->
	<UsingTask TaskName="VitaCGCompile" TaskFactory="XamlTaskFactory"
		AssemblyName="Microsoft.Build.Tasks.v4.0">
		<Task>$(MSBuildThisFileDirectory)$(MSBuildThisFileName).xml</Task>
	</UsingTask>
	
	<!-- Describe building a VitaCGCompile target -->
	<!-- BeforeTargets = When to build (Found in hlsl.props) -->
	<!-- Condition = Build if a file is found -->
	<!-- Outputs = What file does this output? -->
	<!-- Inputs = Files that if modified, build -->
	<!-- DependsOnTargets = Get the list of files Visual Studio determined to build -->	
	
	<Target Name="_VitaCGCompile"
		BeforeTargets="$(VitaCGCompileBeforeTargets)"
		AfterTargets="$(VitaCGCompileAfterTargets)"
		Condition="'@(VitaCGCompile)' != ''"
		Outputs="%(VitaCGCompile.ObjectFileName);%(VitaCGCompile.HeaderFileName)"
		Inputs="%(VitaCGCompile.Identity);%(VitaCGCompile.AdditionalDependencies);$(MSBuildProjectFile)"
		DependsOnTargets="_SelectedFiles">
		
		<!-- Remove files that weren't selected -->
		<ItemGroup Condition="'@(SelectedFiles)' != ''">
			<VitaCGCompile Remove="@(VitaCGCompile)" Condition="'%(Identity)' != '@(SelectedFiles)'" />
		</ItemGroup>
		
		<!-- Collect the dependency information -->
		<ItemGroup>
			<VitaCGCompile_tlog Include="%(VitaCGCompile.ObjectFileName)" Condition="'%(VitaCGCompile.ObjectFileName)' != '' and '%(VitaCGCompile.ExcludedFromBuild)' != 'true'">
				<Source>@(VitaCGCompile, '|')</Source>
			</VitaCGCompile_tlog>
		</ItemGroup>
		
		<!-- Message to print when the file is compiled -->
		<Message Importance="High" Text="%(VitaCGCompile.ExecutionDescription)" />

		<!-- Write out the dependency information to $(ProjectName).write.1.tlog -->
		<!-- Use ^ to denote source files and full paths for output files for clean -->
		<WriteLinesToFile
			Condition="'@(VitaCGCompile_tlog)' != '' and '%(VitaCGCompile_tlog.ExcludedFromBuild)' != 'true'"
			File="$(IntDir)$(ProjectName).write.1.tlog"
			Encoding="utf-8"
			Lines="^%(VitaCGCompile_tlog.Source);@(VitaCGCompile_tlog-&gt;'%(Fullpath)')"/>

		<!-- Extract the variables declared in the XML file to prep for a build -->
		<VitaCGCompile Condition="'@(VitaCGCompile)' != '' and '%(VitaCGCompile.ExcludedFromBuild)' != 'true'"
			TargetProfile="%(VitaCGCompile.TargetProfile)"
			ObjectFileName="%(VitaCGCompile.ObjectFileName)"
			AdditionalIncludeDirectories="%(VitaCGCompile.AdditionalIncludeDirectories)"
			ForcedIncludeFiles="%(VitaCGCompile.ForcedIncludeFiles)"
			PreprocessorDefinitions="%(VitaCGCompile.PreprocessorDefinitions)"
			EntryPointName="%(VitaCGCompile.EntryPointName)"
			DisableStdlib="%(VitaCGCompile.DisableStdlib)"
			WarningLevel="%(VitaCGCompile.WarningLevel)"
			PerfWarnings="%(VitaCGCompile.PerfWarnings)"
			WarningsAreErrors="%(VitaCGCompile.WarningsAreErrors)"
			DisableSpecificWarnings="%(VitaCGCompile.DisableSpecificWarnings)"
			Pendantic="%(VitaCGCompile.Pendantic)"
			CgFX="%(VitaCGCompile.CgFX)"
			Optimization="%(VitaCGCompile.Optimization)"
			NoFastMath="%(VitaCGCompile.NoFastMath)"
			Precision="%(VitaCGCompile.Precision)"
			NoFastInteger="%(VitaCGCompile.NoFastInteger)"
			PositionInvariant="%(VitaCGCompile.PositionInvariant)"
			Language="%(VitaCGCompile.Language)"
			DisableColorWarnings="%(VitaCGCompile.DisableColorWarnings)"
			PerformPreprocessing="%(VitaCGCompile.PerformPreprocessing)"
			DisableLineDirectives="%(VitaCGCompile.DisableLineDirectives)"
			PreserveComments="%(VitaCGCompile.PreserveComments)"
			DependencyFile="%(VitaCGCompile.DependencyFile)"
			PhonyTargets="%(VitaCGCompile.PhonyTargets)"
			DependencyFileName="%(VitaCGCompile.DependencyFileName)"
			DependencyTarget="%(VitaCGCompile.DependencyTarget)"
			IgnoreMissing="%(VitaCGCompile.IgnoreMissing)"
			CgCache="%(VitaCGCompile.CgCache)"
			CacheDir="%(VitaCGCompile.CacheDir)"
			SDBFilename="%(VitaCGCompile.SDBFilename)"
			SDBFilenameXML="%(VitaCGCompile.SDBFilenameXML)"
			VariableName="%(VitaCGCompile.VariableName)"
			HeaderFileName="%(VitaCGCompile.HeaderFileName)"

			AdditionalOptions="%(VitaCGCompile.AdditionalOptions)"
			CommandLineTemplate="%(VitaCGCompile.CommandLineTemplate)"
			Inputs="%(VitaCGCompile.Identity)" />
	</Target>
	
	<!-- Create a list of .obj files to send to the linkers -->
	<Target Name="ComputeVitaCGCompileOutput" Condition="'@(VitaCGCompile)' != ''">
		<ItemGroup>
			<Link Include="@(VitaCGCompile->Metadata('ObjectFileName')->Distinct()->ClearMetadata())" Condition="'%(VitaCGCompile.ExcludedFromBuild)' != 'true'"/>
			<Lib Include="@(VitaCGCompile->Metadata('ObjectFileName')->Distinct()->ClearMetadata())" Condition="'%(VitaCGCompile.ExcludedFromBuild)' != 'true'"/>
		</ItemGroup>
	</Target>

</Project>
